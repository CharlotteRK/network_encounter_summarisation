#!/bin/bash
format='tcpdump'
input='./'
start=$(date +%s)
tmpdir=$(mktemp -d ../tmp.XXXXXX)
tmpassoc=$(mktemp "${tmpdir}/summarise-associations.XXXXXX.csv")
tmpaps=$(mktemp "${tmpdir}/access-points.XXXXXX.csv")

print_usage() {
    echo "Usage: ./run <options>"
    echo " "
    echo "options:"
    echo "-h,                    Show help"
    echo "-f [format],           Specify input format"
    echo "-i [input_dir],        Specify input directory"
    exit 0
}

while getopts 'f:hi:' flag; do
    case "${flag}" in
        f) format="${OPTARG}"
            ;;
        h) print_usage
            exit 1 ;;
        i) input="${OPTARG}"
            ;;
        *) print_usage
            exit 1 ;;
    esac
done

echo "source,destination,start,fin,AP" > "${tmpassoc}"
echo "Unzipping .gz files from "${input}" and extracting associations..."
if [[ "${format}" == "tcpdump" ]]
then
    for FILE in $(find ${input} -name '*.gz')
    do
        (gzip -dc "${FILE}" | parse_associations/parse_tcpdump -) 1>> "${tmpassoc}"
    done
elif [[ "${format}" == "syslog" ]]
then
    for FILE in $(find "${input}" -name '*.gz')
    do
        (gzip -dc "${FILE}" | python3 parse_associations/parse_syslog.py -) 1>> "${tmpassoc}"
    done
fi
echo "Finding access points and encounters..."
matlab -nojvm -nodisplay -nosplash -batch "find_encounters('${tmpassoc}','${tmpaps}'); quit" 1>/dev/null
ap=$(cat ${tmpaps} | wc -l)
end=$(date +%s)
runtime=$(expr ${end} - ${start})
runtime=$(expr ${runtime} / 60)
echo "Done! $(expr ${ap} - 1) access points were identified. This took ${runtime} minutes."
rm -r "${tmpdir}"
