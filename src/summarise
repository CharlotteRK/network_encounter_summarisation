#!/bin/bash
format='tcpdump'
input='./'
config=''
outfilename=$(date +'%F_%H-%M-%S')
output="./${outfilename}_summary.csv"
start=$(date +%s)
tmpdir=$(mktemp -d "../tmp.XXXXXX")
tmpassoc=$(mktemp "${tmpdir}/summarise-associations.XXXXXX.csv")
tmpaps=$(mktemp "${tmpdir}/access-points.XXXXXX.csv")

print_usage() {
    echo "Usage: ./run <options>"
    echo " "
    echo "options:"
    echo "-h,                    Show help"
    echo "-f [format],           Specify input format"
    echo "-i [input_dir],        Specify input directory"
    echo "-o [output_file],      Specify output file"
    exit 0
}


while getopts 'f:hi:o:c:' flag; do
    case "${flag}" in
        f) format="${OPTARG}"
            ;;
        h) print_usage
            exit 1 ;;
        i) input="${OPTARG}"
            ;;
        o) output="${OPTARG}"
            ;;
        c) config="${OPTARG}"
            ;;
        *) print_usage
            exit 1 ;;
    esac
done

print_progress() {
    ten=$(expr 10 '*' ${thisfile})
    div=$(expr ${ten} / ${nofiles})
    round=$(echo ${div} | awk '{print int($1)}')
    case "${round}" in
        1) echo -ne "[#         ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        2) echo -ne "[##        ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        3) echo -ne "[###       ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        4) echo -ne "[####      ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        5) echo -ne "[#####     ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        6) echo -ne "[######    ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        7) echo -ne "[#######   ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        8) echo -ne "[########  ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        9) echo -ne "[######### ] associations extracted from $thisfile/$nofiles files\r"
            ;;
        10) echo -ne "[##########] associations extracted from $thisfile/$nofiles files\r"
            ;;
    esac
}

echo "source,destination,start,fin,AP" > "${tmpassoc}"
files=$(find ${input} -name '*.gz')
nofiles=$(find ${input} -name '*.gz' | wc -l)
thisfile=1
echo "Number of input files found: ${nofiles}"
echo "Unzipping .gz files and extracting associations..."
if [[ "${format}" == "tcpdump" ]]
then
    if [["${config}" != '']]
    then
        echo "WARNING: configuration file ${config} will not be used."
    fi
    for FILE in ${files}
    do
        print_progress
        (gzip -dc "${FILE}" | parse_associations/parse_tcpdump -) 1>> "${tmpassoc}"
        thisfile=$(expr ${thisfile} + 1)
    done
elif [[ "${format}" == "syslog" ]]
then
    if [[ "${config}" == '' ]]
    then
        echo "ERROR: configuration file must be specified for ${format} format." 1>&2
        rm -r "${tmpdir}"
        exit 1
    fi
    for FILE in ${files}
    do
        print_progress
        (gzip -dc "${FILE}" | python3 parse_associations/parse_syslog.py "${config}") 1>> "${tmpassoc}"
        thisfile=$(expr ${thisfile} + 1)
    done
fi
echo "Finding access points and encounters...                           "
matlab -nojvm -nodisplay -nosplash -batch "find_encounters('${tmpassoc}','${tmpaps}','${output}'); quit"
ap=$(cat ${tmpaps} | wc -l)
end=$(date +%s)
runtime=$(expr ${end} - ${start})
runtime=$(expr ${runtime} / 60)
echo "Done! $(expr ${ap} - 1) access points were identified. This took ${runtime} minutes."
rm -r "${tmpdir}"
